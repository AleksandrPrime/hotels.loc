/*! normalize.css v6.0.0 | MIT License | github.com/necolas/normalize.css */
html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}article,aside,footer,header,nav,section{display:block}h1{font-size:2em;margin:.67em 0}figcaption,figure,main{display:block}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent;-webkit-text-decoration-skip:objects}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:inherit}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}audio,video{display:inline-block}audio:not([controls]){display:none;height:0}img{border-style:none}svg:not(:root){overflow:hidden}button,input,optgroup,select,textarea{margin:0}button,input{overflow:visible}button,select{text-transform:none}button,html [type=button],[type=reset],[type=submit]{-webkit-appearance:button}button::-moz-focus-inner,[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring{outline:1px dotted ButtonText}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{display:inline-block;vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details,menu{display:block}summary{display:list-item}canvas{display:inline-block}template{display:none}[hidden]{display:none}html,body{margin:0;padding:0;font-family:Tahoma}.wrapper{max-width:1024px;margin:0 auto;box-shadow:0 0 18.1px 2.9px rgba(0,0,0,.57)}.wrapper-center{max-width:866px;margin:0 auto;padding:0 2px}.wrapper-center--flex{display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;-webkit-box-pack:justify;justify-content:space-between;-webkit-box-flex:1;flex-grow:1}.booster{height:105px}.header-top{display:-webkit-box;display:flex;max-width:100%;background-color:#54add8;height:40px;-webkit-box-align:start;align-items:flex-start}.menu{height:40px;display:-webkit-box;display:flex}.menu__btn{display:none;cursor:pointer;padding-top:7px}.menu__btn:hover{background-color:#f75c00}.menu__opened{display:block!important}.menu__burger{height:5px;width:40px;position:relative;background-color:#fff;border-radius:8px}.menu__burger:before,.menu__burger:after{border-radius:8px;content:"";display:block;position:absolute;height:5px;width:40px;background-color:#fff;left:0;top:10px}.menu__burger:after{top:20px}.menu__nav{display:-webkit-box;display:flex;list-style-type:none;-webkit-box-align:center;align-items:center;padding:0}.menu__list{height:40px;padding:0 10px;display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;position:relative}.menu__list:hover{background-color:#f75c00;cursor:pointer}.menu__list--sub:hover .menu__sub{display:block}.menu__list--sub:hover{background-color:#f75c00}.menu__sub{list-style-type:none;display:none;position:absolute;text-decoration:none;height:33px;top:100%;right:-15%}.menu__list-sub{width:163px;height:33px;background-color:#fff;border:1px solid #d7d7d7}.menu__list-sub:last-child{border-radius:0 0 6px 6px}.menu__list-sub:hover{background-color:#bfd8eb}.menu__links-sub{display:block;height:33px;padding-left:10px;text-decoration:none;color:#000;font-size:14px;font-weight:400;line-height:27px}.menu__links{display:block;text-decoration:none;color:#fff;font-size:13px;font-weight:700;text-transform:uppercase;height:100%;line-height:40px}.menu__icon{width:10px;height:5px;fill:#fff;padding-left:10px}.menu__icon:hover{cursor:pointer}.authorization{display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;padding-left:25px}.authorization__icon{padding-right:10px;width:11.72px;height:15px;fill:#a8d5eb}.authorization__icon:hover{cursor:pointer}.authorization__login{color:#a8d5eb;font-size:14px;font-weight:400;line-height:27px;text-decoration:underline}.authorization:hover *{fill:#fff;color:#fff}.header-bot{max-width:100%;height:351px;background-color:#0085c5;overflow:hidden}.rus-train-tickets{margin:49px auto;font-size:24px;font-weight:400;text-align:center;color:#fff}.search-form{max-width:100%}.search-form__departure{max-width:398px;-webkit-box-flex:1;flex-grow:1}.search-form__arrival{max-width:398px;-webkit-box-flex:1;flex-grow:1}.search-form__top{display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;-webkit-box-pack:justify;justify-content:space-between}.search-form__label{display:block;font-size:14px;font-weight:400;line-height:27px;color:#fff}.search-form__label--inline:after{content:'';display:block;height:16px;width:16px;background-color:#fff;border-radius:3px;box-shadow:inset 0 1px 3px rgba(0,0,0,.7);position:absolute;top:7px;left:7px}.search-form__dep-input{display:block;width:100%;height:47px;background-color:#fff;border:1px solid #d7d7d7;border-radius:6px}.search-form__swap{margin:0 14px;background-color:transparent;border:transparent;cursor:pointer}.search-form__swap:disabled:hover{cursor:default}.search-form__swap-btn{width:29.812px;height:15.906px;fill:#fff}.search-form__swap:disabled .search-form__swap-btn{fill:#94c4db}.search-form__ex{font-size:14px;font-weight:400;line-height:27px;color:#94c4db}.search-form__ex--city{border-bottom:1px dashed #94c4db}.search-form__ex--city:hover{cursor:pointer;color:#fff;border:0}.search-form__bot{display:-webkit-box;display:flex;-webkit-box-align:end;align-items:flex-end;-webkit-box-pack:justify;justify-content:space-between;-webkit-box-flex:1;flex-grow:1}.search-form__check{display:-webkit-box;display:flex;position:relative;-webkit-box-align:center;align-items:center;max-width:100px;height:30px;padding:0 10px;margin:0 20px 10px 0;background-color:#0b92d2;border-radius:6px}.search-form__check:after{content:'';position:absolute;border-style:solid;border-width:8px 0 8px 8px;border-color:transparent #0b92d2;display:block;width:0;z-index:1;right:-8px;top:7px}.search-form__round-trip{margin-right:5px}.search-form__round-trip:checked:after{content:url(../i/check.png);width:10px;height:8px;position:absolute;top:7px;left:10px;z-index:1000}.search-form__select{background-color:#fff;border:1px solid #d7d7d7;border-radius:6px}.search-form__date{max-width:167px;margin-right:45px}.search-form__date-input{overflow:hidden;padding:0 10px;max-width:167px;height:47px;border:1px solid #d7d7d7;border-radius:6px;background:#fff url(../i/calendar.png) no-repeat 90%}.search-form__date-input:disabled{background-color:#1395d3;border:1px solid #0076ad}.search-form__date-input:disabled::-webkit-input-placeholder{color:#94c4db}.search-form__date-input:disabled:-ms-input-placeholder{color:#94c4db}.search-form__date-input:disabled::-ms-input-placeholder{color:#94c4db}.search-form__date-input:disabled::placeholder{color:#94c4db}.search-form__date-input.hasDatepicker{max-width:140px}.search-form__btn{display:-webkit-box;display:flex;-webkit-box-pack:center;justify-content:center;-webkit-box-align:center;align-items:center;flex-basis:181px;height:47px;margin-left:45px;background-image:linear-gradient(to top,#f75e02 0%,#fbb04c 100%);border:1px solid #de5300;border-radius:3px;box-shadow:inset 0 2px 0 #fcc272;cursor:pointer}.search-form__btn-icon{width:18px;height:18px;fill:#fff}.search-form__btn-search{padding-left:10px;color:#fff;font-size:16px;font-weight:400;line-height:27px}#speed-button{display:-webkit-box;display:flex;position:relative;width:86px;height:47px;padding:0!important;-webkit-box-align:center;align-items:center;border:1px solid #d7d7d7;border-radius:6px}#speed-button:after{content:"";display:block;position:absolute;width:18px;height:24px;background-color:#efefef;border-radius:2px;box-shadow:0 1px 1px rgba(0,0,0,.62);left:69%;top:21%;z-index:1}.ui-selectmenu-text{font-size:16px;font-weight:400;color:#000;padding-left:10px}.ui-selectmenu-icon{position:absolute;left:70%;z-index:2}.ui-menu-item{position:relative;height:33px;border-bottom:1px solid #d7d7d7!important}.ui-menu-item-wrapper{height:33px;padding:7px 1em 3px .6em!important}.ui-state-active{margin:0!important;background:#bfd8eb!important;color:#000!important;border:0!important;box-sizing:border-box!important}.ui-selectmenu-menu .ui-menu{overflow-y:hidden;padding-bottom:0}.ui-selectmenu-button-open{border-bottom:1px solid #d7d7d7!important;background-color:#fff!important;border-radius:6px 6px 0 0!important}.ui-selectmenu-button-open:focus{outline:0!important}.ui-widget-content{border-radius:0 0 6px 6px!important}@-moz-document url-prefix(){.menu__sub{right:-25%}.search-form__label--inline::after{content:"";display:none}}@media screen and (max-width:871px){.menu__btn{display:block}.menu__nav{display:none}.menu__list{background-color:rgba(19,149,211,.9);border:1px solid #d7d7d7;transition:all .1s}.menu__list:first-child{border-radius:6px 6px 0 0}.menu__list:last-child{border-radius:0 0 6px 6px}.menu__sub{top:0;left:34%;z-index:1}.menu__list-sub:first-child{border-radius:0 6px 0 0}.header-bot{height:auto;overflow:hidden;padding-bottom:25px}.search-form__bot{flex-wrap:wrap;justify-content:space-around;padding-top:25px}.search-form__btn{margin-top:50px}}@media screen and (max-width:554px){.search-form__check{margin-right:0}}@media screen and (max-width:432px){.search-form__top{flex-wrap:wrap}.search-form__departure,.search-form__arrival{width:calc(100% - 4px)}.search-form__swap{-webkit-transform:rotate(90deg);transform:rotate(90deg);margin:15px auto}.search-form__btn{margin-left:0}}@media screen and (max-width:326px){.search-form__date{margin-right:5px}}@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none){.ui-selectmenu-icon.ui-icon{margin-top:-9px}.search-form__label--inline::after{content:"";display:none}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
